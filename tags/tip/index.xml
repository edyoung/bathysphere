<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tip on Bathysphere.org</title><link>https://www.bathysphere.org/tags/tip/</link><description>Recent content in Tip on Bathysphere.org</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Sep 2020 17:11:06 -0700</lastBuildDate><atom:link href="https://www.bathysphere.org/tags/tip/index.xml" rel="self" type="application/rss+xml"/><item><title>What's the difference between az account show and Get-AzContext?</title><link>https://www.bathysphere.org/p/whats-the-difference-between-az-account-show-and-get-azcontext/</link><pubDate>Mon, 07 Sep 2020 17:11:06 -0700</pubDate><guid>https://www.bathysphere.org/p/whats-the-difference-between-az-account-show-and-get-azcontext/</guid><description>&lt;img src="https://www.bathysphere.org/p/whats-the-difference-between-az-account-show-and-get-azcontext/paris.jpg" alt="Featured image of post What's the difference between az account show and Get-AzContext?" />&lt;p>One issue which can trip you up when using command-line tools to configure Azure is a confusing &lt;em>lack&lt;/em> of interaction between Azure CLI and Azure PowerShell. They both provide a &amp;ldquo;context&amp;rdquo; so you don&amp;rsquo;t have to keep specifying the subscription over and over. But Azure CLI (the &lt;code>az&lt;/code> command) has a separate context from Azure PowerShell. You can see this by running&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">az account show &lt;span class="c1"># show azure CLI context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Get-AzContext &lt;span class="c1"># show azure Powershell context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az account &lt;span class="nb">set&lt;/span> --subscription &lt;span class="s1">&amp;#39;mysub2&amp;#39;&lt;/span> &lt;span class="c1"># change Azure CLI context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az account show &lt;span class="c1"># azure CLI has changed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Get-AzContext &lt;span class="c1"># Azure PowerShell has not!&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You should find that the second output from &lt;code>az account show&lt;/code> has changed to your &lt;code>mysub2&lt;/code> subscription, but &lt;code>Get-AzContext&lt;/code> still has the previous value. Similarly, you can run &lt;code>Set-AzContext -Subscription xxx&lt;/code> and it will change the output from &lt;code>Get-AzContext&lt;/code> but not the output from &lt;code>az account show&lt;/code>.&lt;/p>
&lt;p>So if you have a script where you change Azure CLI&amp;rsquo;s context and then you run an Azure PowerShell command, it looks at PowerShell&amp;rsquo;s context (which hasn&amp;rsquo;t changed) so it doesn&amp;rsquo;t produce the answer you want.&lt;/p>
&lt;p>You can fix this by either: run &lt;code>Set-AzContext&lt;/code> as well before running the cmdlet; or running the az equivalent of your cmdlet, which will honor the az context.&lt;/p>
&lt;p>You may be thinking &amp;ldquo;That&amp;rsquo;s crazy! Why do it that way? You should change it so both share a context!&amp;rdquo; I don&amp;rsquo;t personally know the history of why these 2 are separate. But to be honest I doubt that it can be changed at this point without causing a lot of backward-compatibility issues for people who accidentally or deliberately rely on the current behavior.&lt;/p></description></item></channel></rss>