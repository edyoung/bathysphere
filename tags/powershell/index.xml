<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell on Bathysphere.org</title><link>https://www.bathysphere.org/tags/powershell/</link><description>Recent content in PowerShell on Bathysphere.org</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Sep 2020 17:11:06 -0700</lastBuildDate><atom:link href="https://www.bathysphere.org/tags/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure Arc command-line tools cheat sheet</title><link>https://www.bathysphere.org/p/azurearc-cheatsheet/</link><pubDate>Tue, 22 Sep 2020 17:11:06 -0700</pubDate><guid>https://www.bathysphere.org/p/azurearc-cheatsheet/</guid><description>&lt;img src="https://www.bathysphere.org/p/azurearc-cheatsheet/orbiter.jpg" alt="Featured image of post Azure Arc command-line tools cheat sheet" />&lt;p>Arc for Servers has an Azure CLI extension and PowerShell module. Because they are prerelease, they are not included (yet) in the main releases
(ie, you don&amp;rsquo;t get this just by installing az cli or the Az module).
However they are already functional and useful. Here&amp;rsquo;s how to do some simple operations with each of them.&lt;/p>
&lt;h2 id="install">Install
&lt;/h2>&lt;p>AZ CLI:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az extension add connectedmachine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Azure PowerShell:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Install-Module&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">Az&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">ConnectedMachine&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="list-machines">List machines
&lt;/h2>&lt;p>AZ CLI&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az connectedmachine list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># only display a few properties in a convenient form&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az connectedmachine list --query &lt;span class="s2">&amp;#34;[].{Name:name,ResourceGroup:resourceGroup,Location:location,Status:status}&amp;#34;&lt;/span> -o table
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Azure PowerShell:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-AzConnectedMachine&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="list-extensions-installed-on-a-machine">List extensions installed on a machine
&lt;/h2>&lt;p>AZ CLI&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az connectedmachine extension list --resource-group edyoung --machine-name edwin-virtual-machine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Azure PowerShell:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-AzConnectedMachineExtension&lt;/span> &lt;span class="n">-ResourceGroupName&lt;/span> &lt;span class="n">edyoung&lt;/span> &lt;span class="n">-MachineName&lt;/span> &lt;span class="nb">edwin-virtual&lt;/span>&lt;span class="n">-machine&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="install-custom-script-extension-on-a-windows-machine-and-run-dir">Install Custom Script Extension on a windows machine and run &amp;lsquo;dir&amp;rsquo;
&lt;/h2>&lt;p>Note that installing extensions currently takes several minutes. Please be patient.&lt;/p>
&lt;p>AZ CLI run in bash&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note --location needs to be the location of the machine&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az connectedmachine extension create --machine-name silverbox-ne --resource-group edyoung --name myext --type &lt;span class="s2">&amp;#34;CustomScriptExtension&amp;#34;&lt;/span> --publisher &lt;span class="s2">&amp;#34;Microsoft.Compute&amp;#34;&lt;/span> --settings &lt;span class="s1">&amp;#39;{&amp;#34;commandToExecute&amp;#34;:&amp;#34;dir&amp;#34;}&amp;#39;&lt;/span> --location &lt;span class="s2">&amp;#34;North Europe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>AZ CLI run inside PowerShell (the escaping is different for settings param)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">az&lt;/span> &lt;span class="n">connectedmachine&lt;/span> &lt;span class="n">extension&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-machine-name&lt;/span> &lt;span class="nb">silverbox-ne&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-resource-group&lt;/span> &lt;span class="n">edyoung&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-name&lt;/span> &lt;span class="n">myext&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-type&lt;/span> &lt;span class="s2">&amp;#34;CustomScriptExtension&amp;#34;&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-publisher&lt;/span> &lt;span class="s2">&amp;#34;Microsoft.Compute&amp;#34;&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-settings&lt;/span> &lt;span class="s1">&amp;#39;{\&amp;#34;commandToExecute\&amp;#34;:\&amp;#34;dir\&amp;#34;}&amp;#39;&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-location&lt;/span> &lt;span class="s2">&amp;#34;North Europe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Azure PowerShell&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">New-AzConnectedMachineExtension&lt;/span> &lt;span class="n">-MachineName&lt;/span> &lt;span class="nb">silverbox-ne&lt;/span> &lt;span class="n">-ResourceGroupName&lt;/span> &lt;span class="n">edyoung&lt;/span> &lt;span class="n">-Location&lt;/span> &lt;span class="s2">&amp;#34;North Europe&amp;#34;&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">myext&lt;/span> &lt;span class="n">-Setting&lt;/span> &lt;span class="s1">&amp;#39;{&amp;#34;commandToExecute&amp;#34;:&amp;#34;dir&amp;#34;}&amp;#39;&lt;/span> &lt;span class="n">-ExtensionType&lt;/span> &lt;span class="n">CustomScriptExtension&lt;/span> &lt;span class="n">-Publisher&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Compute&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="delete-an-extension">Delete an extension
&lt;/h2>&lt;p>AZ CLI&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az connectedmachine extension delete --name myext -g edyoung --machine-name silverbox-ne
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Azure PowerShell&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Remove-AzConnectedMachineExtension&lt;/span> &lt;span class="n">-MachineName&lt;/span> &lt;span class="nb">silverbox-ne&lt;/span> &lt;span class="n">-ResourceGroupName&lt;/span> &lt;span class="n">edyoung&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">myext&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>How to install your own versions of tools in Azure Cloud Shell</title><link>https://www.bathysphere.org/p/cloud-shell-installs/</link><pubDate>Mon, 21 Sep 2020 18:11:06 -0700</pubDate><guid>https://www.bathysphere.org/p/cloud-shell-installs/</guid><description>&lt;img src="https://www.bathysphere.org/p/cloud-shell-installs/image.png" alt="Featured image of post How to install your own versions of tools in Azure Cloud Shell" />&lt;p>Cloud Shell comes with a lot of tools, and we try to keep them up to date. But sometimes you need something a little bit more cutting edge or unusual. How do you install it?&lt;/p>
&lt;p>Using Cloud Shell is a little different from running your own Linux computer, but it&amp;rsquo;s a lot like using a multi-user Unix system.
The main difference is &lt;strong>you are not root&lt;/strong> and we won&amp;rsquo;t tell you the root password (sorry).
So anything that requires you to run &lt;code>sudo&lt;/code> or change files outside your home directory or /tmp won&amp;rsquo;t work. This includes old favorites like &lt;code>apt-get install&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>Why? A tiny bit for security - we don&amp;rsquo;t want to make it any easier for people to break out of Cloud Shell than it needs to be - but
mostly for consistency. In Cloud Shell the only things that persist across sessions are the contents of your home directory
and clouddrive. If you manage to change files and install something under /usr/bin, it would magically be gone the next time you start
Cloud Shell, and that wouldn&amp;rsquo;t be too helpful.&lt;/p>&lt;/blockquote>
&lt;p>So the short version is, anything you can install to your home directory or below it will work just fine. Let&amp;rsquo;s look at some examples.&lt;/p>
&lt;h2 id="powershell-modules">PowerShell modules
&lt;/h2>&lt;p>Just install them with &lt;code>Install-Module&lt;/code>. By default, they will be saved to &lt;code>~/.local/share/powershell/Modules/&lt;/code>. Those will be loaded first
in preference to ones that are installed in the system-wide directories, which can be good and bad. Mostly good, but consider this:&lt;/p>
&lt;ol>
&lt;li>Cloud Shell ships with AwesomeModule 1.0&lt;/li>
&lt;li>You&amp;rsquo;re like &amp;ldquo;That&amp;rsquo;s old school, AwesomeModule 1.1 is way better&amp;rdquo;. &lt;code>Install-Module AwesomeModule -RequiredVersion 1.1&lt;/code> FTW!&lt;/li>
&lt;li>Cloud Shell updates to AwesomeModule 2.0&lt;/li>
&lt;li>You still wind up using AwesomeModule 1.1. Sadness.&lt;/li>
&lt;/ol>
&lt;p>This can be particularly tricky with the Azure PowerShell modules, because installing one of them brings along 10 others it depends on. You may want to periodically delete &lt;code>~/.local/share/powershell/Modules/&lt;/code> to be on the safe side.&lt;/p>
&lt;h2 id="node-modules">Node Modules
&lt;/h2>&lt;p>Just install them with &lt;code>npm install&lt;/code>. But &lt;code>npm install -g&lt;/code> tries to update &lt;code>/usr/local/lib/node_modules&lt;/code> which won&amp;rsquo;t work, so don&amp;rsquo;t do that.&lt;/p>
&lt;h2 id="az-cli-and-extensions">AZ CLI and extensions
&lt;/h2>&lt;p>You can install AZ CLI extensions with &lt;code>az extension add&lt;/code>. This saves the extension to a location in your home dir, and just works.&lt;/p>
&lt;p>However updating the whole of AZ CLI is more difficult. I don&amp;rsquo;t have good instructions for doing that at the moment.&lt;/p>
&lt;h2 id="random-executables-and-tools">Random Executables and tools
&lt;/h2>&lt;p>If you have a favorite unix tool look for the &amp;ldquo;Manual Installation&amp;rdquo; instructions on its home page, those will usually work even if &lt;code>apt-get&lt;/code> does not. For example, we don&amp;rsquo;t have the GitHub CLI tool (at the time of writing anyway😉). If you look at &lt;a class="link" href="https://github.com/cli/cli/blob/trunk/docs/install_linux.md" target="_blank" rel="noopener"
>https://github.com/cli/cli/blob/trunk/docs/install_linux.md&lt;/a> it starts with instructions about using apt-get which (sorry) won&amp;rsquo;t work. But under &amp;lsquo;Manual Instructions&amp;rsquo; it turns out you can just download &lt;a class="link" href="https://github.com/cli/cli/releases/download/v1.0.0/gh_1.0.0_linux_amd64.tar.gz" target="_blank" rel="noopener"
>https://github.com/cli/cli/releases/download/v1.0.0/gh_1.0.0_linux_amd64.tar.gz&lt;/a> , unpack it and run it.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://github.com/cli/cli/releases/download/v1.0.0/gh_1.0.0_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xzvf gh_1.0.0_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh_1.0.0_linux_amd64/bin/gh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The last bit points out one snag. You either need to run a program via its full path or add it to a directory in your $PATH. As with PowerShell modules,
be aware that if your directory is earlier in the $PATH than the standard ones, if you shadow a tool that Cloud Shell installs you might not see future updates.&lt;/p>
&lt;h2 id="terraform">Terraform
&lt;/h2>&lt;p>Terraform basically falls under the &amp;lsquo;random executables bucket&amp;rsquo; but there are a few special considerations.&lt;/p>
&lt;p>You can install it locally with&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wget -O terraform.zip https://releases.hashicorp.com/terraform/0.13.2/terraform_0.13.2_linux_amd64.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">unzip terraform.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./terraform
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>But it won&amp;rsquo;t behave quite the same as the one in Cloud Shell. That&amp;rsquo;s because if you look at&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">edwin@Azure:~$ more /usr/local/bin/terraform
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#!/usr/bin/env bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ARM_SUBSCRIPTION_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>az account show --output&lt;span class="o">=&lt;/span>json &lt;span class="p">|&lt;/span> jq -r -M &lt;span class="s1">&amp;#39;.id&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ARM_TENANT_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>az account show --output&lt;span class="o">=&lt;/span>json &lt;span class="p">|&lt;/span> jq -r -M &lt;span class="s1">&amp;#39;.tenantId&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ARM_MSI_ENDPOINT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$MSI_ENDPOINT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$ARM_MSI_ENDPOINT&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">ARM_USE_MSI&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">ARM_USE_MSI&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/terraform:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">terraform &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can see it&amp;rsquo;s really a script where we set a couple environment variables so terraform works better in Cloud Shell. To get the benefit of those too, you need to copy the script to (say) &lt;code>~/terraform.sh&lt;/code> and
edit it so it finds and runs your local terraform executable as well.&lt;/p></description></item><item><title>What's the difference between az account show and Get-AzContext?</title><link>https://www.bathysphere.org/p/whats-the-difference-between-az-account-show-and-get-azcontext/</link><pubDate>Mon, 07 Sep 2020 17:11:06 -0700</pubDate><guid>https://www.bathysphere.org/p/whats-the-difference-between-az-account-show-and-get-azcontext/</guid><description>&lt;img src="https://www.bathysphere.org/p/whats-the-difference-between-az-account-show-and-get-azcontext/paris.jpg" alt="Featured image of post What's the difference between az account show and Get-AzContext?" />&lt;p>One issue which can trip you up when using command-line tools to configure Azure is a confusing &lt;em>lack&lt;/em> of interaction between Azure CLI and Azure PowerShell. They both provide a &amp;ldquo;context&amp;rdquo; so you don&amp;rsquo;t have to keep specifying the subscription over and over. But Azure CLI (the &lt;code>az&lt;/code> command) has a separate context from Azure PowerShell. You can see this by running&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">az account show &lt;span class="c1"># show azure CLI context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Get-AzContext &lt;span class="c1"># show azure Powershell context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az account &lt;span class="nb">set&lt;/span> --subscription &lt;span class="s1">&amp;#39;mysub2&amp;#39;&lt;/span> &lt;span class="c1"># change Azure CLI context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az account show &lt;span class="c1"># azure CLI has changed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Get-AzContext &lt;span class="c1"># Azure PowerShell has not!&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You should find that the second output from &lt;code>az account show&lt;/code> has changed to your &lt;code>mysub2&lt;/code> subscription, but &lt;code>Get-AzContext&lt;/code> still has the previous value. Similarly, you can run &lt;code>Set-AzContext -Subscription xxx&lt;/code> and it will change the output from &lt;code>Get-AzContext&lt;/code> but not the output from &lt;code>az account show&lt;/code>.&lt;/p>
&lt;p>So if you have a script where you change Azure CLI&amp;rsquo;s context and then you run an Azure PowerShell command, it looks at PowerShell&amp;rsquo;s context (which hasn&amp;rsquo;t changed) so it doesn&amp;rsquo;t produce the answer you want.&lt;/p>
&lt;p>You can fix this by either: run &lt;code>Set-AzContext&lt;/code> as well before running the cmdlet; or running the az equivalent of your cmdlet, which will honor the az context.&lt;/p>
&lt;p>You may be thinking &amp;ldquo;That&amp;rsquo;s crazy! Why do it that way? You should change it so both share a context!&amp;rdquo; I don&amp;rsquo;t personally know the history of why these 2 are separate. But to be honest I doubt that it can be changed at this point without causing a lot of backward-compatibility issues for people who accidentally or deliberately rely on the current behavior.&lt;/p></description></item></channel></rss>